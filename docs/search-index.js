var searchIndex = JSON.parse('{\
"embre":{"doc":"EmbRe - Embedded Resources API for Rust","t":"DDALLLLALLLLOOOOLLLLLLLLAAAAGLLDLLLLLLLLLLLLLLLLLLLLLGLLLLLLLLLLLLDIIIDDLLLLLLMMMALLLLLKLLLLLLMMMMMLLLMLLLLLLLLLFFFFFAAAGLLDLLLLLLLLLLLLLLLLLLGLLLLLLLLLLL","n":["DataResource","StringResource","aes","borrow","borrow","borrow_mut","borrow_mut","embedded_resource","fmt","fmt","from","from","include_bytes_aes","include_bytes_xor","include_str_aes","include_str_xor","into","into","try_from","try_from","try_into","try_into","type_id","type_id","xor","aes_data","aes_resource","aes_string","AESData","fmt","from","AESResource","borrow","borrow_mut","eq","eq","eq","eq","fmt","from","get_encrypted_slice","get_iv","get_key","into","new","new_from","to_plaintext_c_string","to_plaintext_data","to_plaintext_string","to_string","try_from","try_into","type_id","AESString","eq","eq","eq","eq","eq","eq","eq","eq","fmt","from","to_plaintext_c_string","to_plaintext_string","AESOffsets","EmbeddedAES","EmbeddedResource","EmbeddedXOR","PEResource","XOROffsets","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","category_id","data","data","default_impl","from","from","from","get_data","get_data","get_resource","get_resource","get_str","get_str","into","into","into","iv","key","key","len","len","new","new","new","resource_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","FindResourceA","GetModuleHandleA","LoadResource","LockResource","SizeofResource","xor_data","xor_resource","xor_string","XORData","fmt","from","XORResource","borrow","borrow_mut","eq","eq","eq","eq","fmt","from","get_encrypted_slice","get_key","into","new","to_plaintext_c_string","to_plaintext_data","to_string","try_from","try_into","type_id","XORString","eq","eq","eq","eq","eq","eq","eq","eq","fmt","from","to_plaintext_c_string"],"q":[[0,"embre"],[25,"embre::aes"],[28,"embre::aes::aes_data"],[31,"embre::aes::aes_resource"],[53,"embre::aes::aes_string"],[66,"embre::embedded_resource"],[112,"embre::embedded_resource::default_impl"],[117,"embre::xor"],[120,"embre::xor::xor_data"],[123,"embre::xor::xor_resource"],[142,"embre::xor::xor_string"],[154,"core::fmt"],[155,"core::fmt"],[156,"core::any"],[157,"alloc::vec"],[158,"core::fmt"],[159,"core::option"],[160,"alloc::ffi::c_str"],[161,"alloc::ffi::c_str"],[162,"alloc::string"],[163,"alloc::string"],[164,"widestring::ucstr"],[165,"widestring::ucstring"]],"d":["","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Embeds the file and key as a static byte slice, and gives …","","Embeds the string  and key as a static byte slice, and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","This returns the original plaintext version of the string …","Returns a <code>Vec&lt;u8&gt;</code> with the decrypted data.","This returns the original plaintext version of the string …","","","","","","","","","","","","","","","","This returns the original plaintext version of the string …","This returns the original plaintext version of the string …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the encrypted data from the provided offsets, as …","Returns the encrypted data from the provided offsets, as …","Returns a reference to the start of a resource.","Returns the resource embedded the programs PE …","Returns the encrypted data from the provided offsets, as …","Returns the encrypted data from the provided offsets, as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","This returns the original plaintext version of the string …","Returns a <code>Vec&lt;u8&gt;</code> with the decrypted data.","","","","","","","","","","","","","","","","This returns the original plaintext version of the string …"],"i":[0,0,0,1,4,1,4,0,1,4,1,4,0,0,0,0,1,4,1,4,1,4,1,4,0,0,0,0,0,7,7,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,30,27,29,30,27,29,30,27,29,0,30,27,29,35,36,37,30,35,36,30,27,29,29,27,29,27,29,30,27,29,30,30,27,29,30,27,29,30,27,29,0,0,0,0,0,0,0,0,0,28,28,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,31,31,31,31,31,31,31,31,31,31,31],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,2],3],[[4,2],3],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],0,0,0,0,0,[[7,2],3],[8,7],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]],[11,[10]]],12,[]],[[[9,[-1]],[13,[10]]],12,[]],[[[9,[-1]],[11,[10]]],12,[]],[[[9,[-1]],[9,[-1]]],12,[]],[[[9,[-1,-2]],2],3,14,[14,15]],[-1,-1,[]],[[[9,[-1]]],[[11,[10]]],[]],[[[9,[-1]]],[[16,[[11,[10]]]]],[]],[[[9,[-1]]],[[11,[10]]],[]],[-1,-2,[],[]],[[[11,[10]],[11,[10]],[16,[[11,[10]]]]],[[9,[-1]]],[]],[[[11,[10]],[11,[10]],[16,[[11,[10]]]],-1],[[9,[-2,-1]]],15,[]],[[[9,[1]]],[[5,[17,18]]]],[[[9,[-1]]],[[19,[[13,[10]]]]],[]],[[[9,[1]]],[[5,[20,21]]]],[-1,20,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],0,[[8,[11,[22]]],12],[[8,[11,[22]]],12],[[8,23],12],[[8,17],12],[[8,20],12],[[8,24],12],[[8,25],12],[[8,26],12],[[8,2],3],[7,8],[8,[[5,[17,18]]]],[8,[[5,[20,21]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,27],28,[]],[[-1,29],7,[]],[-1,[[16,[[11,[10]]]]],[]],[30,[[16,[[11,[10]]]]]],[[-1,27],31,[]],[[-1,29],8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[32,32],30],[[33,33,33],27],[[33,33,[16,[33]],33],29],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],0,0,0,0,0,0,0,0,0,[[28,2],3],[31,28],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1]],[34,[-1]]],12,[]],[[[34,[-1]],[11,[10]]],12,[]],[[[34,[-1]],[11,[10]]],12,[]],[[[34,[-1]],[13,[10]]],12,[]],[[[34,[-1]],2],3,14],[-1,-1,[]],[[[34,[-1]]],[[11,[10]]],[]],[[[34,[-1]]],[[11,[10]]],[]],[-1,-2,[],[]],[[[11,[10]],[11,[10]]],[[34,[-1]]],[]],[[[34,[1]]],[[5,[17,18]]]],[[[34,[-1]]],[[13,[10]]],[]],[-1,20,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],0,[[31,23],12],[[31,20],12],[[31,26],12],[[31,25],12],[[31,24],12],[[31,[11,[22]]],12],[[31,17],12],[[31,[11,[22]]],12],[[31,2],3],[28,31],[31,[[5,[17,18]]]]],"c":[],"p":[[3,"StringResource",0],[3,"Formatter",154],[6,"Result",154],[3,"DataResource",0],[4,"Result",155],[3,"TypeId",156],[6,"AESData",28],[6,"AESString",53],[3,"AESResource",31],[15,"u8"],[15,"slice"],[15,"bool"],[3,"Vec",157],[8,"Debug",154],[8,"AESCrypter",158],[4,"Option",159],[3,"CString",160],[3,"NulError",160],[6,"Result",161],[3,"String",162],[3,"FromUtf8Error",162],[15,"u16"],[3,"CStr",163],[15,"str"],[3,"U16CStr",164],[3,"U16CString",165],[3,"XOROffsets",66],[6,"XORData",120],[3,"AESOffsets",66],[3,"PEResource",66],[6,"XORString",142],[15,"u32"],[15,"usize"],[3,"XORResource",123],[8,"EmbeddedXOR",66],[8,"EmbeddedAES",66],[8,"EmbeddedResource",66]],"b":[[34,"impl-PartialEq%3C%26%5Bu8%5D%3E-for-AESResource%3C\'_,+T%3E"],[35,"impl-PartialEq%3CVec%3Cu8%3E%3E-for-AESResource%3C\'_,+T%3E"],[36,"impl-PartialEq%3C%5Bu8%5D%3E-for-AESResource%3C\'_,+T%3E"],[37,"impl-PartialEq-for-AESResource%3C\'_,+T%3E"],[54,"impl-PartialEq%3C%5Bu16%5D%3E-for-AESResource%3C\'_,+StringResource%3E"],[55,"impl-PartialEq%3C%26%5Bu16%5D%3E-for-AESResource%3C\'_,+StringResource%3E"],[56,"impl-PartialEq%3CCStr%3E-for-AESResource%3C\'_,+StringResource%3E"],[57,"impl-PartialEq%3CCString%3E-for-AESResource%3C\'_,+StringResource%3E"],[58,"impl-PartialEq%3CString%3E-for-AESResource%3C\'_,+StringResource%3E"],[59,"impl-PartialEq%3C%26str%3E-for-AESResource%3C\'_,+StringResource%3E"],[60,"impl-PartialEq%3CU16CStr%3E-for-AESResource%3C\'_,+StringResource%3E"],[61,"impl-PartialEq%3CU16CString%3E-for-AESResource%3C\'_,+StringResource%3E"],[126,"impl-PartialEq-for-XORResource%3C\'_,+T%3E"],[127,"impl-PartialEq%3C%26%5Bu8%5D%3E-for-XORResource%3C\'_,+T%3E"],[128,"impl-PartialEq%3C%5Bu8%5D%3E-for-XORResource%3C\'_,+T%3E"],[129,"impl-PartialEq%3CVec%3Cu8%3E%3E-for-XORResource%3C\'_,+T%3E"],[143,"impl-PartialEq%3CCStr%3E-for-XORResource%3C\'_,+StringResource%3E"],[144,"impl-PartialEq%3CString%3E-for-XORResource%3C\'_,+StringResource%3E"],[145,"impl-PartialEq%3CU16CString%3E-for-XORResource%3C\'_,+StringResource%3E"],[146,"impl-PartialEq%3CU16CStr%3E-for-XORResource%3C\'_,+StringResource%3E"],[147,"impl-PartialEq%3C%26str%3E-for-XORResource%3C\'_,+StringResource%3E"],[148,"impl-PartialEq%3C%5Bu16%5D%3E-for-XORResource%3C\'_,+StringResource%3E"],[149,"impl-PartialEq%3CCString%3E-for-XORResource%3C\'_,+StringResource%3E"],[150,"impl-PartialEq%3C%26%5Bu16%5D%3E-for-XORResource%3C\'_,+StringResource%3E"]]},\
"embre_build":{"doc":"embre-build","t":"OAAAADRRRRRRLLMLLLLMMMLLLLIAKAADLLLLLLLLLLLLLMLLLLDLLLLLLMLLLLDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLL","n":["build_println","config","resource","resource_builder","util","BuildConfig","DEFAULT_CATEGORY_ID","DEFAULT_PAD_RANGE","DEFAULT_RESOURCE_ID","DEFAULT_RESOURCE_NAME","PAD_RANGE_END","PAD_RANGE_START","borrow","borrow_mut","category_id","default","from","into","new","pad_range","resource_id","resource_name","try_from","try_into","type_id","vzip","GetResourceName","aes_resource","get_resource_name","plaintext_resource","xor_resource","AESResource","borrow","borrow_mut","from","from","from","from","from","from_str","get_resource_name","into","named","named_str","new","resource_name","try_from","try_into","type_id","vzip","PlaintextResource","borrow","borrow_mut","from","get_resource_name","into","new","resource_name","try_from","try_into","type_id","vzip","XORResource","borrow","borrow_mut","from","from","from","from","from","from_str","get_resource_name","into","named","named_str","new","try_from","try_into","type_id","vzip","ResourceBuilder","add_aes_resource","add_aes_strings","add_aes_strs","add_xor_resource","add_xor_strings","add_xor_strs","borrow","borrow_mut","build","build_consts_file","build_resource_binary","build_resource_headers","default","from","into","new","try_from","try_into","type_id","vzip","with_bytes","with_config"],"q":[[0,"embre_build"],[5,"embre_build::config"],[26,"embre_build::resource"],[31,"embre_build::resource::aes_resource"],[50,"embre_build::resource::plaintext_resource"],[62,"embre_build::resource::xor_resource"],[80,"embre_build::resource_builder"],[103,"alloc::string"],[104,"core::ops::range"],[105,"core::result"],[106,"core::any"],[107,"alloc::vec"],[108,"core::option"],[109,"core::convert"]],"d":["","","","","","A BuildConfig for ResourceBuilder that has the …","","","","","","","","","","Provides the default BuildConfig.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a new BuildConfig with the provided values.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","A Resource builder for building a binary blob for …","Adds a resource to the resource builder for embedding in …","Add multiple Strings at a time to be aes encrypted. All …","Add multiple &amp;strs at a time to be aes encrypted. All …","Adds a resource to the resource builder for embedding in …","Add multiple Strings at a time to be xor encrypted. All …","Add multiple <code>&amp;strs</code> at a time to be xor encrypted. All …","","","","","","","Returns a new Resource builder with the ‘OUT_DIR’ …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a new Resource builder with the out_dir and config …","","","","","Insert bytes into the embedded resource. These bytes are …","Changed the config of the current resource builder to the …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,19,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,15,15,15,15,15,15,15,15,15,15,15,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[-1,-1,[]],[-1,-2,[],[]],[[2,2,3,[5,[4]]],1],0,0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,-2,[],[]],0,0,[-1,3,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[8,8]]],10],[8,10],[[[9,[8,[12,[11]]]]],10],[3,10],[-1,-1,[]],[[8,[14,[[13,[11]]]],[14,[[13,[11]]]]],10],[10,3],[-1,-2,[],[]],[[8,[12,[11]]],10],[[8,8],10],[[8,[12,[11]],[14,[[13,[11]]]],[14,[[13,[11]]]]],10],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[15,3],[-1,-2,[],[]],[8,15],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[8,16],[[[9,[8,8]]],16],[[[9,[8,[12,[11]]]]],16],[3,16],[-1,-1,[]],[8,16],[16,3],[-1,-2,[],[]],[[8,[12,[11]]],16],[[8,8],16],[[8,[12,[11]],[13,[11]]],16],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,-2,[],[]],0,[[17,-1],17,[[18,[10]]]],[[17,[12,[3]]],17],[[17,[12,[8]]],17],[[17,-1],17,[[18,[16]]]],[[17,[12,[3]]],17],[[17,[12,[8]]],17],[-1,-2,[],[]],[-1,-2,[],[]],[17,9],[17,17],[17,17],[17,17],[[],17],[-1,-1,[]],[-1,-2,[],[]],[[3,1],17],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,-2,[],[]],[[17,[12,[11]]],17],[[17,1],17]],"c":[],"p":[[3,"BuildConfig",5],[15,"u32"],[3,"String",103],[15,"usize"],[3,"RangeInclusive",104],[4,"Result",105],[3,"TypeId",106],[15,"str"],[15,"tuple"],[3,"AESResource",31],[15,"u8"],[15,"slice"],[3,"Vec",107],[4,"Option",108],[3,"PlaintextResource",50],[3,"XORResource",62],[3,"ResourceBuilder",80],[8,"Into",109],[8,"GetResourceName",26]],"b":[[34,"impl-From%3C(%26str,+%26str)%3E-for-AESResource"],[35,"impl-From%3C%26str%3E-for-AESResource"],[36,"impl-From%3C(%26str,+%26%5Bu8%5D)%3E-for-AESResource"],[37,"impl-From%3CString%3E-for-AESResource"],[65,"impl-From%3C%26str%3E-for-XORResource"],[66,"impl-From%3C(%26str,+%26str)%3E-for-XORResource"],[67,"impl-From%3C(%26str,+%26%5Bu8%5D)%3E-for-XORResource"],[68,"impl-From%3CString%3E-for-XORResource"]]},\
"embre_core":{"doc":"embre-core","t":"AFF","n":["xor","include_bytes_xor_impl","include_str_xor_impl"],"q":[[0,"embre_core"],[1,"embre_core::xor"],[3,"syn::__private"]],"d":["","",""],"i":[0,0,0],"f":[0,[1,1],[1,1]],"c":[],"p":[[6,"TokenStream",3]],"b":[]},\
"embre_crypt":{"doc":"embre-crypt","t":"AAIIDQQKLKLKLKLLLLLLLLLLLFF","n":["aes","xor","AESCrypter","AESStrCompare","DefaultAesCrypter","InType","ReturnType","aes_compare_slice","aes_compare_slice","aes_compare_w_str","aes_compare_w_str","aes_decrypt_bytes","aes_decrypt_bytes","aes_encrypt_bytes","aes_encrypt_bytes","borrow","borrow_mut","default","from","get_cipher","into","new","try_from","try_into","type_id","xor_bytes","xor_bytes_in_place"],"q":[[0,"embre_crypt"],[2,"embre_crypt::aes"],[25,"embre_crypt::xor"],[27,"core::option"],[28,"openssl::symm"],[29,"core::result"],[30,"core::any"],[31,"alloc::vec"]],"d":["","","<code>AESCrypter</code> trait allows the implementer to specify the …","Separate trait for string compare functions. The …","","The input type for the encrypted or decrypted data, for …","The return type for the encrypt and decrypt functions. …","Compares a string with the encrypted data. The …","Compares a string with the encrypted data. The …","Compares a wide string with the encrypted data. The …","Compares a string with the encrypted data. The …","Decrypts the data passed to the function. The …","Decrypts the data passed to the function. The default …","Encrypts the data passed to the function. The …","Encrypts the data passed to the function. The default …","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,12,12,13,5,13,5,12,5,12,5,5,5,5,5,5,5,5,5,5,5,0,0],"f":[0,0,0,0,0,0,0,[[-1,[2,[1]],[2,[1]],[3,[[2,[1]]]],[2,[1]]],4,[]],[[5,[2,[1]],[2,[1]],[3,[[2,[1]]]],[2,[1]]],4],[[-1,[2,[1]],[2,[1]],[3,[[2,[1]]]],[2,[6]]],4,[]],[[5,[2,[1]],[2,[1]],[3,[[2,[1]]]],[2,[6]]],4],[[-1,[2,[1]],[3,[[2,[1]]]]],[],[]],[[5,[2,[1]],[3,[[2,[1]]]]]],[[-1,[2,[1]],[3,[[2,[1]]]]],[],[]],[[5,[2,[1]],[3,[[2,[1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],[-1,-1,[]],[5,7],[-1,-2,[],[]],[7,5],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[[2,[1]],[2,[1]]],[[10,[1]]]],[[[2,[1]],[2,[1]]],11]],"c":[],"p":[[15,"u8"],[15,"slice"],[4,"Option",27],[15,"bool"],[3,"DefaultAesCrypter",2],[15,"u16"],[3,"Cipher",28],[4,"Result",29],[3,"TypeId",30],[3,"Vec",31],[15,"tuple"],[8,"AESCrypter",2],[8,"AESStrCompare",2]],"b":[]},\
"embre_macro":{"doc":"embre-macro","t":"OOOO","n":["include_bytes_aes","include_bytes_xor","include_str_aes","include_str_xor"],"q":[[0,"embre_macro"]],"d":["","Embeds the file and key as a static byte slice, and gives …","","Embeds the string  and key as a static byte slice, and …"],"i":[0,0,0,0],"f":[0,0,0,0],"c":[],"p":[],"b":[]},\
"embre_test":{"doc":"ember-test","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[],"b":[]},\
"embre_utils":{"doc":"","t":"FF","n":["generate_random_bytes","generate_random_bytes_in_range"],"q":[[0,"embre_utils"],[2,"alloc::vec"],[3,"rand::distributions::uniform"],[4,"core::clone"]],"d":["",""],"i":[0,0],"f":[[1,[[3,[2]]]],[[1,-1],[[3,[2]]],[[4,[2]],5]]],"c":[],"p":[[15,"usize"],[15,"u8"],[3,"Vec",2],[8,"SampleRange",3],[8,"Clone",4]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
