(function() {var type_impls = {
"embre":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AESResource%3C'a,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#13-31\">source</a><a href=\"#impl-AESResource%3C'a,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"struct\" href=\"embre/aes/aes_resource/struct.AESResource.html\" title=\"struct embre::aes::aes_resource::AESResource\">AESResource</a>&lt;'a, T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#14-16\">source</a><h4 class=\"code-header\">pub fn <a href=\"embre/aes/aes_resource/struct.AESResource.html#tymethod.new\" class=\"fn\">new</a>(\n    cipher_text: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>],\n    key: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>],\n    iv: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;\n) -&gt; <a class=\"struct\" href=\"embre/aes/aes_resource/struct.AESResource.html\" title=\"struct embre::aes::aes_resource::AESResource\">AESResource</a>&lt;'a, T&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_plaintext_data\" class=\"method\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#18-21\">source</a><h4 class=\"code-header\">pub fn <a href=\"embre/aes/aes_resource/struct.AESResource.html#tymethod.to_plaintext_data\" class=\"fn\">to_plaintext_data</a>(&amp;self) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.75.0/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>Vec&lt;u8&gt;</code> with the decrypted data.</p>\n</div></details><section id=\"method.get_encrypted_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#22-24\">source</a><h4 class=\"code-header\">pub fn <a href=\"embre/aes/aes_resource/struct.AESResource.html#tymethod.get_encrypted_slice\" class=\"fn\">get_encrypted_slice</a>(&amp;self) -&gt; &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;a [u8]\">ⓘ</a></h4></section><section id=\"method.get_key\" class=\"method\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#25-27\">source</a><h4 class=\"code-header\">pub fn <a href=\"embre/aes/aes_resource/struct.AESResource.html#tymethod.get_key\" class=\"fn\">get_key</a>(&amp;self) -&gt; &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;a [u8]\">ⓘ</a></h4></section><section id=\"method.get_iv\" class=\"method\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#28-30\">source</a><h4 class=\"code-header\">pub fn <a href=\"embre/aes/aes_resource/struct.AESResource.html#tymethod.get_iv\" class=\"fn\">get_iv</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;</h4></section></div></details>",0,"embre::aes::aes_data::AESData","embre::aes::aes_string::AESString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AESResource%3C'a,+T,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#32-47\">source</a><a href=\"#impl-AESResource%3C'a,+T,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, C: <a class=\"trait\" href=\"embre_crypt/aes/trait.AESCrypter.html\" title=\"trait embre_crypt::aes::AESCrypter\">AESCrypter</a>&lt;'a&gt;&gt; <a class=\"struct\" href=\"embre/aes/aes_resource/struct.AESResource.html\" title=\"struct embre::aes::aes_resource::AESResource\">AESResource</a>&lt;'a, T, C&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new_from\" class=\"method\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#33-46\">source</a><h4 class=\"code-header\">pub fn <a href=\"embre/aes/aes_resource/struct.AESResource.html#tymethod.new_from\" class=\"fn\">new_from</a>(\n    cipher_text: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>],\n    key: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>],\n    iv: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt;,\n    crypter: C\n) -&gt; <a class=\"struct\" href=\"embre/aes/aes_resource/struct.AESResource.html\" title=\"struct embre::aes::aes_resource::AESResource\">AESResource</a>&lt;'a, T, C&gt;</h4></section></div></details>",0,"embre::aes::aes_data::AESData","embre::aes::aes_string::AESString"],["<section id=\"impl-Eq-for-AESResource%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#53\">source</a><a href=\"#impl-Eq-for-AESResource%3C'_,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"embre/aes/aes_resource/struct.AESResource.html\" title=\"struct embre::aes::aes_resource::AESResource\">AESResource</a>&lt;'_, T&gt;</h3></section>","Eq","embre::aes::aes_data::AESData","embre::aes::aes_string::AESString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-AESResource%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#48-52\">source</a><a href=\"#impl-PartialEq-for-AESResource%3C'_,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"embre/aes/aes_resource/struct.AESResource.html\" title=\"struct embre::aes::aes_resource::AESResource\">AESResource</a>&lt;'_, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#49-51\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","embre::aes::aes_data::AESData","embre::aes::aes_string::AESString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5Bu8%5D%3E-for-AESResource%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#54-59\">source</a><a href=\"#impl-PartialEq%3C%5Bu8%5D%3E-for-AESResource%3C'_,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"embre/aes/aes_resource/struct.AESResource.html\" title=\"struct embre::aes::aes_resource::AESResource\">AESResource</a>&lt;'_, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#55-58\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[u8]>","embre::aes::aes_data::AESData","embre::aes::aes_string::AESString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-AESResource%3C'a,+T,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#5\">source</a><a href=\"#impl-Debug-for-AESResource%3C'a,+T,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"embre_crypt/aes/trait.AESCrypter.html\" title=\"trait embre_crypt::aes::AESCrypter\">AESCrypter</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"embre/aes/aes_resource/struct.AESResource.html\" title=\"struct embre::aes::aes_resource::AESResource\">AESResource</a>&lt;'a, T, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#5\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","embre::aes::aes_data::AESData","embre::aes::aes_string::AESString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3Cu8%3E%3E-for-AESResource%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#77-81\">source</a><a href=\"#impl-PartialEq%3CVec%3Cu8%3E%3E-for-AESResource%3C'_,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"embre/aes/aes_resource/struct.AESResource.html\" title=\"struct embre::aes::aes_resource::AESResource\">AESResource</a>&lt;'_, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#78-80\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Vec<u8>>","embre::aes::aes_data::AESData","embre::aes::aes_string::AESString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26%5Bu8%5D%3E-for-AESResource%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#67-71\">source</a><a href=\"#impl-PartialEq%3C%26%5Bu8%5D%3E-for-AESResource%3C'_,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"embre/aes/aes_resource/struct.AESResource.html\" title=\"struct embre::aes::aes_resource::AESResource\">AESResource</a>&lt;'_, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embre/aes/aes_resource.rs.html#68-70\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&[u8]>","embre::aes::aes_data::AESData","embre::aes::aes_string::AESString"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()